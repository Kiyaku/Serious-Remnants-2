//No values here are necessary. With the exception of blockFillers, any value left out will default to
//its original equivalent from this file. Take a look at the examples for more information.
//Bear in mind that each preset will get its own generator. So, more presets = more caves.
{
	"enabled" : true,
	"biomes" :
	{
		"names" : [],
		"IDs" : [],
		"types" : []
	},

	"//" : "This option converts biomes from a whitelist to a blacklist.",
	"useBiomeBlacklist" : false,

	"//" : "No dimensions listed means this generator can spawn anywhere.",
	"dimensions" : [],

	"useDimensionBlackList" : false,

	"//" : "See tunnels.json, flooded_vanilla.json, and stalactites.json for examples of blockFillers.",
	"blockFillers" :
	{
		"fillersAreReplaceable" : true,
		
		"keys" : []
	},
	"lavaRules" :
	{
		"maxHeight" : 10
	},
	"rooms" :
	{
		"scale" : 6.0,
		"scaleY" : 0.5
	},
	"tunnels" :
	{
		"frequency" : 15,		
		"minHeight" : 8,
		"maxHeight" : 128,

		"//" : "Distance is automatically calculated when set to 0.",
		"distance" : 0,

		"//" : "Actual chance = 1 / (# + 1)",
		"spawnInSystemInverseChance" : 4,

		"spawnIsolatedInverseChance" : 7,
		"vanillaNoiseYReduction" : true,
		"extensions" :
		{
			"//" : "Options for these are 'vanilla_branches,' 'matching_branches,' 'preset:other_preset_name_here,' and 'room,'",
			"beginning" : "none",
			"random" : "vanilla_branches",
			"end" : "none"
		},
		"twistXZ" :
		{
			"exponent" : 1.0,
			"factor" : 0.75,
			"randomnessFactor" : 4.0,
			"startingValue" : 0.0
		},
		"twistY" :
		{
			"exponent" : 1.0,
			"factor" : 0.9,
			"randomnessFactor" : 2.0,
			"startingValue" : 0.0
		},
		"scale" :
		{
			"exponent" : 1.0,
			"factor" : 1.0,
			"randomnessFactor" : 0.0,
			"startingValue" : 0.0,
			"startingValueRandomnessFactor" : 1.0
		},
		"scaleY" :
		{
			"exponent" : 1.0,
			"factor" : 1.0,
			"randomnessFactor" : 0.0,
			"startingValue" : 1.0
		},
		"slopeXZ" :
		{
			"startingValue" : 0.0,
			"startingValueRandomnessFactor" : 1.0
		},
		"slopeY" :
		{
			"startingValue" : 0.0,
			"startingValueRandomnessFactor" : 0.25
		}
	},
	"//" : "See caverns.json for an example of caverns. These are the default values.",
	"caverns" :
	{
		"enabled" : false,
		"minHeight" : 10,
		"maxHeight" : 50,

		"//" : "The opposite of frequency",
		"spacing" : 70.0,

		"//" : "scale(Y) is from 0 - 1.",
		"scale" : 0.2,

		"scaleY" : 0.5,
		"octaves" : 1
	},
	"//" : "See stone_layers.json for an example of stoneLayers.",
	"stoneLayers" :
	{
		"keys" : []
	},
	"//" : "See stone_clusters.json for an example of stoneClusters.",
	"stoneClusters" :
	{
		"keys" : []
	},
	"//" : "See stalagmites_large.json for an example of largeStalactites and largeStalactites.",
	"//" : "These are just the default values, so you only need to specify the state.",
	"largeStalactites" :
	{
		"keys" : [],

		"defaultValues" :
		{
			"state" : "there is no default state.",
			"spawnInPatches" : false,
			"patchSpacing" : 40,
			"patchScale" : 0.425,
			"maxLength" : 3,
			"probability" : 16.7,
			"minHeight" : 11,
			"maxHeight" : 55,
			"matchers" : []
		}
	},
	"largeStalagmites" :
	{
		"keys" : []
	},
	"//" : "See underground_forest.json for an example of giantPillars.",
	"//" : "These are just the default values; you only need to specify a pillarState",
	"giantPillars" :
	{
		"keys" : [],

		"defaultValues" :
		{
			"pillarState" : "You must specify a pillarState manually.",
			"stairBlock" : "This can be left blank to spawn no stairs at all.",
			"frequency" : 15,
			"minHeight" : 10,
			"maxHeight" : 50,
			"minLength" : 4,
			"maxLength" : 12
		}
	},

	"//" : "Structures will only spawn below the surface. These use some shortcuts",
	"//" : "to try and spawn quickly. Ideal for small decorations.",
	"//" : "Structures much larger than 16x16 will cause cascading gen lag.",
	"//" : "Structures will be centered around (x, z), but not y.",
	"//" : "See underground_forest.json for an example of structures.",
	"//" : "These are just the default values. Most information can be left out.",
	"structures" :
	{
		"keys" : [],

		"defaultValues" :
		{
			"name" : "There is no default name. Either use a resource location or the name of the file in /cavegenerator/structures/.",
			"integrity" : 1.0,

			"//" : "Either specify offset, or just use offsetX or whichever is needed. offset takes three numbers for x, y, and z.",
			"//" : "Example: (inside the brackets) 0, -5, 0 will move the structure down five blocks.",
			"offset" : [],
			"offsetX" : 0,
			"offsetY" : 0,
			"offsetZ" : 0,

			"//" : "Matchers is just like the key used elsewhere. Only matches the first surface block found.",
			"matchers" : [],

			"//" : "Directions only supports up and / or down",
			"directions" : [],

			"//" : "Frequency is the number of tries per chunk. Should be low.",
			"frequency" : 1,

			"//" : "Chance is the percent chance any try will succeed.",
			"chance" : 0.05,
			"minHeight" : 10,
			"maxHeight" : 50,

			"//" : "airMatchers looks for air relative to the center of the structure, where the match was found.",
			"airMatchers" : [],

			"//" : "solidMatchers are the opposite of air matchers, except they specifically test for solid blocks.",
			"solidMatchers" : [],

			"//" : "This will print the location of each spawn to the console to help you debug rare structures.",
			"debugSpawns" : false,

			"rotateRandomly" : false
		},
		"strangeSyntaxExample" :
		{
			"airMatchers" :
			[
				[0, -3, 0],
				[0, -6, 0],
				[2, 0, 0],
				[0, 0, 2]
			]
		}
	},
	"//" : "Ravines are like tunnels, but spawn with noisier walls. You could theoretically ",
	"//" : "use these as your main tunnels, as well, if you're using multiple presets.",
	"ravines" : 
	{
		"//" : "Actual chance = 1 / (# + 1)",
		"inverseChance" : 50,

		"minHeight" : 20,
		"maxHeight" : 40,

		"//" : "Distance is automatically calculated when set to 0.",
		"distance" : 0,

		"twistXZ" :
		{
			"exponent" : 1.0,
			"factor" : 0.5,
			"randomnessFactor" : 4.0,
			"startingValue" : 0.0
		},
		"twistY" :
		{
			"exponent" : 1.0,
			"factor" : 0.8,
			"randomnessFactor" : 2.0,
			"startingValue" : 0.0
		},
		"scale" :
		{
			"exponent" : 1.0,
			"factor" : 1.0,
			"randomnessFactor" : 0.0,
			"startingValue" : 0.0,
			"startingValueRandomnessFactor" : 2.0
		},
		"scaleY" :
		{
			"exponent" : 1.0,
			"factor" : 1.0,
			"randomnessFactor" : 0.0,
			"startingValue" : 3.0
		},
		"slopeXZ" :
		{
			"startingValue" : 0.0,
			"startingValueRandomnessFactor" : 1.0
		},
		"slopeY" :
		{
			"startingValue" : 0.0,
			"startingValueRandomnessFactor" : 0.25
		},

		"//" : "Similar to vanillaNoiseYReduction for tunnels, but not as random.",
		"noiseYFactor" : 0.7
	}
}